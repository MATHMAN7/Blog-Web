import React, { useRef, useState, useEffect } from "react";
import ReactFlow from "reactflow";
import "reactflow/dist/style.css";

const nodes = [
    { id: 'skills', data: { label: 'Skills Snapshot' } },
    { id: 'languages', data: { label: 'Programming Languages' } },
    { id: 'frameworks', data: { label: 'Frameworks & Libs' } },
    { id: 'databases', data: { label: 'Databases' } },
    { id: 'tools', data: { label: 'Tools & Version' } },
    { id: 'ide', data: { label: 'IDEs & Dev Env' } },
    { id: 'productivity', data: { label: 'Productivity' } },
    { id: 'expertise', data: { label: 'Expertise' } },
    { id: 'freelance', data: { label: 'Freelance Side Gigs' } },
    { id: 'math', data: { label: 'Academic & Analytical Strengths' } },
    { id: 'experiments', data: { label: 'R&D / Experiments' } },
];

function SkillsFlow() {
    const wrapperRef = useRef(null);
    const [dynamicNodes, setDynamicNodes] = useState([]);

    useEffect(() => {
        if (!wrapperRef.current) return;

        const width = wrapperRef.current.offsetWidth;
        const height = wrapperRef.current.offsetHeight;
        const centerX = width / 2;
        const centerY = height / 2;

        const positionedNodes = nodes.map((node, i) => ({
            ...node,
            position: {
                x: centerX + (i % 3) * 120 - 180,
                y: centerY + Math.floor(i / 3) * 70 - 180,
            },
        }));

        setDynamicNodes(positionedNodes);
    }, []);

    return (
        <div ref={wrapperRef} style={{ width: "100%", height: "500px", border: "1px solid #ccc" }}>
            <ReactFlow
                nodes={dynamicNodes}
                edges={[]}
                fitView
                panOnScroll={false}
                panOnDrag={false}
                zoomOnScroll={false}
                zoomOnPinch={false}
                zoomOnDoubleClick={false}
                nodesDraggable={false}
                nodesConnectable={false}
                elementsSelectable={false}
                style={{ pointerEvents: 'none' }}
            />
        </div>
    );
}

export default SkillsFlow;
